---
- name: Download and install borg as a release from Github (statically compiled) for 64bit linux
  block:
    - name: Set the correct Github API endpoint based on version
      set_fact:
        github_api_endpoint: "{{ 'https://api.github.com/repos/borgbackup/borg/releases/latest' if borgbackup_version == 'latest' else 'https://api.github.com/repos/borgbackup/borg/releases/tags/'+ borgbackup_version}}"
      when: borgbackup_override_borg_installation == False
    
    - name: Get version {{ borgbackup_version }} of a borgbackup repository
      delegate_to: localhost
      run_once: True
      uri:
        url: "{{github_api_endpoint}}"
      register: borg_latest
      when: borgbackup_override_borg_installation == False
     
    - name: Download borg backup
      get_url:
        dest: "/tmp/borg"
        mode: "0755"
        url: "https://github.com/borgbackup/borg/releases/download/{{ borg_latest.json.tag_name }}/borg-linux64"
        force: yes
      delegate_to: localhost
      when: borgbackup_override_borg_installation == False
    
    - name: Install borg backup
      copy: 
        src: "/tmp/borg"
        dest: "/usr/local/bin/borg"
        owner: "{{ borgbackup_owner }}"
        group: "{{ borgbackup_group }}"
        mode: "0755"
      when: borgbackup_override_borg_installation == False
  when: ansible_architecture is defined and ansible_architecture == "x86_64"
- name: Install borgbackup via package manager (version is ignored) for non x86_64 systems
  block:
    - name: Install borgbackup from package manager
      package:
        name: 
          - borgbackup
      when: ansible_os_family is defined and (ansible_os_family == "Debian" or ansible_os_family == "RedHat")
    - name: Create a symlink from /usr/local/bin/borg to /usr/bin/borg
      file:
        src: /usr/bin/borg
        dest: /usr/local/bin/borg
        state: link
  when: ansible_architecture is defined and ansible_architecture != "x86_64"
- name: install borg support packages
  apt: 
    name: '{{ borgbackup_packages }}'
    force_apt_get: yes
  when: ansible_os_family is defined and ansible_os_family == "Debian"

- name: install borg
  apk:
    name: 'borgbackup'
  when: ansible_distribution == "Alpine"

- name: install borg support packages
  apk:
    name: '{{ borgbackup_packages }}'
  when: ansible_distribution == "Alpine"
